<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
    1.创建bean的三种方式:默认构造函数,普通工厂对象中的方法创建对象,使用某个类中的静态方法创建对象
    2.bean对象的作用范围,scope属性
        取值:
            singleton:单例,默认
            prototype:多例
            request:作用于web应用的请求范围
            session:作用于web应用的会话范围
            global-seesion:作用于集群环境的会话范围,不是集群,就是session
    3.bean对象生命周期
        单例
            出生:容器创建时
            活着:容器活动时
            死亡:容器死亡时
        多例
    -->

<!--    默认构造函数创建-->
    <bean id="accountService" class="com.myj.service.impl.AccountServiceImpl" scope="prototype"></bean>

<!--    工厂对象中的方法创建对象-->
    <bean id="instanceFactory" class="com.myj.factory.InstanceFactory"></bean>
    <bean id="accountService1" factory-bean="instanceFactory" factory-method="getAccountService"></bean>

<!--    静态方法创建对象-->
    <bean id="accountService2" class="com.myj.factory.StaticFactory" factory-method="getAccountService"></bean>

<!--    此处为了说明在scope不同时,bean的生命周期-->
    <bean id="accountService3" class="com.myj.factory.StaticFactory"
          scope="singleton" init-method="init" destroy-method="destroy"></bean>
</beans>