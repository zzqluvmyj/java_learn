<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
<!--    配置spring的ioc-->
    <bean id="accountService" class="com.myj.service.impl.AccountService"></bean>


    <bean id="logger" class="com.myj.utils.Logger"></bean>

    <aop:config>
<!--        下面这个写在外面可以被所有切面访问,必须写在aspect之前.-->
        <aop:pointcut id="pt2" expression="execution(* *..*.*(..))"></aop:pointcut>
<!--        配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
<!--            配置通知的类型,并且建立建立通知方法和切入点之间的关联-->

<!--            <aop:before method="beforePrintLog" pointcut="execution(* *..*.*(..))"></aop:before>-->
<!--            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>-->
<!--            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->
<!--            <aop:after method="afterPrintLog" pointcut-ref="pt2"></aop:after>-->
<!--            <aop:pointcut id="pt1" expression="execution(* *..*.*(..))"></aop:pointcut>-->

<!--            环绕通知-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt2"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>